import type { Metadata } from 'next';
import { Nunito, Nunito_Sans } from 'next/font/google';
import clsx from 'clsx';
import { PrismicPreview } from '@prismicio/next';

import './globals.css';
import { createClient, repositoryName } from '@/prismicio';
import Header from '@/components/Header';
import Footer from '@/components/Footer';

const nunito = Nunito({
  subsets: ['latin'],
  variable: '--font-nunito',
  display: 'swap'
});
const nunitoSans = Nunito_Sans({
  subsets: ['latin'],
  variable: '--font-nunito-sans',
  display: 'swap'
});

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app'
// };

export async function generateMetadata(): Promise<Metadata> {
  const client = createClient();
  const settings = await client.getSingle('settings');

  return {
    title: settings.data.site_title || 'Flowrise fallback',
    description:
      settings.data.meta_description || 'Flowrise is the app for you!',

    openGraph: {
      images: [settings.data.og_image.url || '']
    }
  };
}

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang='en' className={clsx(nunito.variable, nunitoSans.variable)}>
      <body>
        <Header />
        {children}
        <Footer />
        <div className='fixed inset-0 z-[-1] bg-gradient-to-tr from-emerald-50 to-cyan-50 opacity-50'></div>
        <PrismicPreview repositoryName={repositoryName} />
      </body>
    </html>
  );
}
